datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  username       String   @unique
  email          String   @unique
  password       String
  role           String   @default("user")
  likedArtists   Artist[] @relation(fields: [likedArtistIds], references: [id])
  likedArtistIds String[] @db.ObjectId
  likedAlbums    Album[]  @relation(fields: [likedAlbumIds], references: [id])
  likedAlbumIds  String[] @db.ObjectId
  createdAt      DateTime @default(now())
}

model Artist {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  users    User[]   @relation(fields: [userIds], references: [id])
  userIds  String[] @db.ObjectId
  tracks   Tracks[] @relation(fields: [trackIds], references: [id])
  trackIds String[] @db.ObjectId
  albums   Album[] 
  albumIds String[] @db.ObjectId
}

model Album {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  genre    String[]
  artist   Artist   @relation(fields: [artistId], references: [id])
  artistId String   @db.ObjectId
  users    User[]   @relation(fields: [userIds], references: [id])
  userIds  String[] @db.ObjectId
  tracks   Tracks[] @relation(fields: [trackIds], references: [id])
  trackIds String[] @db.ObjectId
}

model Tracks {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  artist   Artist[] @relation(fields: [artistId], references: [id])
  artistId String[] @db.ObjectId
  albumId  String[] @db.ObjectId
  albums   Album[]  @relation(fields: [albumId], references: [id])
  genre  String[]
}
